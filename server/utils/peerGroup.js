var peerGroups = require('./peerGroups');
var isEmpty = require('lodash/lang/isEmpty');


/**
 * Used to track a group of peers connected to a boardshare session
 * @param      {String}   id A 7 digit hash generated by Hashids. This id is also
 * used for the firepad and session URL
 * @return     {Object} An instance of PeerGroup
 */
PeerGroup = function(id){
  // id is used for the socket room as well
  this.id = id;
  this.peerIds = {};
  peerGroups.addGroup(this);
};

/**
 * Add a peerId to the peerIds collection
 * @param      {String}   socketId the socket.io socketId of the connected user
 * @param      {String}   peerId the peerJS peerId of the connected user
 */
PeerGroup.prototype.addPeerId = function(socketId, peerId) {
  this.peerIds[socketId] = peerId;
};

/**
 * Remove a peerID from the peerIds collection
 * @param      {String}   socketId the socketId of the connected/disconnected user
 * whose id peerId will be removed
 */
PeerGroup.prototype.removePeerId = function(socketId) {
  delete this.peerIds[socketId];
};

/**
 * Check if the PeerGroup is empty (contains no peerIds)
 * @return     {Boolean} True if there are not peerIds
 */
PeerGroup.prototype.isEmpty = function () {
  return isEmpty(this.peerIds);
};

module.exports = PeerGroup;
